
@model PagedList.IPagedList<Bug_Tracker.Models.Ticket>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Tickets</h2>

@using (Html.BeginForm("Index", "Tickets", FormMethod.Get))
{
    <div>
        Find by title or description: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" class="btn btn-primary" />

        <span class="pull-right">
            Displaying @ViewBag.PageSize ticket(s)
            @Html.TextBox("PageSize", "10", new { type = "number", min = "1" })
            <input type="submit" value="Apply" class="btn btn-primary" />
        </span>
    </div>
}

<br />

@if (Model.Count == 0)
{
    <h3>Nothing to display.</h3>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Description", "Index", new { sortOrder = ViewBag.DescSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Project Name", "Index", new { sortOrder = ViewBag.ProjSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Priority", "Index", new { sortOrder = ViewBag.PriorSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Type", "Index", new { sortOrder = ViewBag.TypeSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Create Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Last Updated", "Index", new { sortOrder = ViewBag.UpdateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Assigned To", "Index", new { sortOrder = ViewBag.AssignSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Owned By", "Index", new { sortOrder = ViewBag.OwnSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Title, "Details", new { id = item.Id })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Name)
            </td>
            <td>
                @item.Created.ToShortDateString()
            </td>
            <td>
                @item.Updated.ToShortDateString()
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AssignedToUser.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerUser.UserName)
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.PageSize }))
