@model Bug_Tracker.Models.Project
@using Bug_Tracker.Models;
@using Bug_Tracker.BL;
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Details";
}

<h2>
    @Model.Name
    <span class="pull-right">
        @if (UserService.UserInRole(User.Identity.GetUserId(), "admin") || UserService.UserInRole(User.Identity.GetUserId(), "manager"))
        {
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#edit-name-modal">
                Edit Name
            </button>
        }
        else if (UserService.UserInRole(User.Identity.GetUserId(), "submitter"))
        {
            @Html.ActionLink("Create Ticket", "Create", "Tickets", new { id = Model.Id }, new { @class = "btn btn-primary" })
        }
    </span>
</h2>

<div class="modal fade" id="edit-name-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Edit Project Name</h4>
            </div>
            @using (Html.BeginForm("EditName", "Projects"))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    @if (!Html.ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            @Html.ValidationSummary(false, "Errors", new { @class = "text-danger" })
                        </div>
                    }

                    <div class="form-group">
                        @Html.HiddenFor(model => model.Id)
                        @Html.LabelFor(model => model.Name)
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <input type="submit" class="btn btn-primary" value="Update" />
                </div>
            }
        </div>
    </div>
</div>

<h3>Tickets</h3>
@foreach (var ticket in Model.Tickets)
{
    <div class="panel panel-@ticket.StatusClassName">
        <div class="panel-heading">
            @if (ticket.TicketPriority.Name == "High" && ticket.TicketStatus.Name != "Resolved")
            {
                <span style="font-size: 1.5em; font-weight: 800; color: red">!</span>
            }
            @Html.ActionLink(ticket.Title, "Details", "Tickets", new { id = ticket.Id }, null)
            <span class="pull-right">Created: @ticket.Created.ToShortDateString()</span>
        </div>
        <div class="panel-body">
            <div>@ticket.Description</div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Assigned To</th>
                    <th>Owner</th>
                    <th>Type</th>
                    <th>Updated</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@(ticket.AssignedToUser != null ? ticket.AssignedToUser.UserName : "Unassigned")</td>
                    <td>@ticket.OwnerUser.UserName</td>
                    <td>@ticket.TicketType.Name</td>
                    <td>@ticket.Updated.ToShortDateString()</td>
                </tr>
            </tbody>
        </table>
    </div>
}

@if (UserService.UserInRole(User.Identity.GetUserId(), "admin") || UserService.UserInRole(User.Identity.GetUserId(), "manager") || UserService.UserInRole(User.Identity.GetUserId(), "developer"))
{
    <hr />

    <h3>
        Users
        @if (UserService.UserInRole(User.Identity.GetUserId(), "admin") || UserService.UserInRole(User.Identity.GetUserId(), "manager"))
        {
            <span>
                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#add-user-modal">
                    Add
                </button>
            </span>
            <span>
                <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#remove-user-modal">
                    Remove
                </button>
            </span>
        }
    </h3>

    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">@Html.DisplayName("Username")</th>
                <th scope="col">@Html.DisplayName("Email")</th>
                <th scope="col">@Html.DisplayName("Role")</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var projectUser in Model.ProjectUsers)
            {
                <tr>
                    <td>@projectUser.User.UserName</td>
                    <td>@projectUser.User.Email</td>
                    <td>@(UserService.GetAllRolesOfUser(projectUser.UserId).ToList()[0])</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="modal fade" id="add-user-modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Add a User</h4>
                </div>
                @using (Html.BeginForm("AddUser", "Projects", new { id = Model.Id }))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        @if (!Html.ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                @Html.ValidationSummary(false, "Errors", new { @class = "text-danger" })
                            </div>
                        }

                        <div class="form-group">
                            @Html.DropDownList("AddUserId", null, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <input type="submit" class="btn btn-primary" value="Update" />
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="modal fade" id="remove-user-modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Remove a User</h4>
                </div>
                @using (Html.BeginForm("RemoveUser", "Projects", new { id = Model.Id }))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        @if (!Html.ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                @Html.ValidationSummary(false, "Errors", new { @class = "text-danger" })
                            </div>
                        }

                        <div class="form-group">
                            @Html.DropDownList("RemoveUserId", null, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <input type="submit" class="btn btn-primary" value="Update" />
                    </div>
                }
            </div>
        </div>
    </div>

}

